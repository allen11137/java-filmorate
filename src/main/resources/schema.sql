create table if not exists film
(
    id          INTEGER generated by default as identity primary key,
    genre       INTEGER,
    name        varchar,
    description varchar,
    releaseDate timestamp,
    duration    INTEGER,
    rating      INTEGER
);

create table if not exists genre
(
    id   INTEGER NOT NULL AUTO_INCREMENT,
    name varchar NOT NULL,
    CONSTRAINT GENRE_PK
        PRIMARY KEY (ID)
);

create table if not exists genre_film
(
    genre_id INTEGER REFERENCES genre (id),
    film_id  INTEGER REFERENCES film (id),
    constraint PK_GENRE_FILM
        primary key (genre_id, film_id)
);


create table if not exists rating
(
    id   INTEGER      NOT NULL AUTO_INCREMENT,
    name varchar(255) NOT NULL,
    constraint RATING_PK primary key (id)
);

create table if not exists person
(
    id       INTEGER generated by default as identity primary key,
    email    varchar NOT NULL,
    login    varchar NOT NULL,
    name     varchar,
    birthday timestamp
);

create table if not exists friendship
(
    person_id        INTEGER REFERENCES person (id),
    friend_id        INTEGER REFERENCES person (id),
    status_of_friend boolean,
    constraint PK_FRIEND
        primary key (person_id, friend_id)
);

create table if not exists list_likes
(
    person_id INTEGER REFERENCES person (id),
    film_id   INTEGER REFERENCES film (id),
    constraint PK_LIKES_FILM
        primary key (person_id, film_id)
);

create table if not exists film_rating
(
    film_id INTEGER not null REFERENCES film (id),
    rating_id  INTEGER not null references rating (id)
);